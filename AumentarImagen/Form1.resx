<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>